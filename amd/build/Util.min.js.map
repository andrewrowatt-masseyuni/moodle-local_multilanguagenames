{"version":3,"file":"Util.min.js","sources":["../src/Util.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module Util\n *\n * @module     local_multilanguagenames/Util\n * @copyright  2025 Andrew Rowatt <A.J.Rowatt@massey.ac.nz>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// https://regex101.com/r/cRgZFS\n// https://regex101.com/r/sIVMIq\n// https://regex101.com/r/bDAO3Z\n// https://regex101.com/r/Wsn3yl name fragment\n\n/* eslint-disable max-len */\nclass Util {\n    static #CONTAINER_START_REGEX_FRAGMENT = '<span class=\"mlnc\">';\n    static #CONTAINER_START_FRAGMENT = '<span class=\"mlnc\">';\n\n    static #NAME_REGEX_FRAGMENT = '<span class=\"n(\\\\d)\"(?: lang=\"(..)\" xml:lang=\"..\")?>(.*?)<\\\\/span>';\n    static #NAME_FRAGMENT = '<span class=\"n{level}\" lang=\"{lang}\" xml:lang=\"{lang}\">{name}</span>';\n    static #NAME_FRAGMENT_EN = '<span class=\"n{level}\">{name}</span>';\n\n    static #DIVIDER_PLAINTEXT_FRAGMENT = ' | ';\n    static #DIVIDER_REGEX_FRAGMENT = '<span> \\\\| <\\\\/span>';\n    static #DIVIDER_FRAGMENT = `<span>${Util.#DIVIDER_PLAINTEXT_FRAGMENT}</span>`;\n\n    static #CONTAINER_END_REGEX_FRAGMENT = '<\\\\/span>';\n    static #CONTAINER_END_FRAGMENT = '</span>';\n\n    static #NAME_REGEX = new RegExp(`${Util.#CONTAINER_START_REGEX_FRAGMENT}${Util.#NAME_REGEX_FRAGMENT}(?:${Util.#DIVIDER_REGEX_FRAGMENT}${Util.#NAME_REGEX_FRAGMENT}(?:${Util.#DIVIDER_REGEX_FRAGMENT}${Util.#NAME_REGEX_FRAGMENT})?)?${Util.#CONTAINER_END_REGEX_FRAGMENT}`, 'g');\n\n    // Default state\n    sectionOrActivityName = '';\n    multilanguageName = false;\n    nameCount = 0;\n    name1 = '';\n    name1lang = 'en';\n    name2 = '';\n    name2lang = 'en';\n    name3 = '';\n    name3lang = 'en';\n\n    constructor(sectionOrActivityNameOrName1, name1lang, name2 = '', name2lang = '', name3 = '', name3lang = '') {\n        if (name1lang === undefined) {\n            this.sectionOrActivityName = sectionOrActivityNameOrName1;\n            this.#parseName();\n        } else {\n            this.name1 = sectionOrActivityNameOrName1;\n            this.name1lang = name1lang;\n            this.nameCount = 1;\n\n            this.name2 = name2;\n            this.name2lang = name2lang;\n            if (name2 && name2lang) {\n                this.nameCount = 2;\n            }\n\n            this.name3 = name3;\n            this.name3lang = name3lang;\n            if (name3 && name3lang) {\n                this.nameCount = 3;\n            }\n\n        }\n    }\n\n    #parseName() {\n        let [match] = [...this.sectionOrActivityName.matchAll(Util.#NAME_REGEX, 'g')];\n\n        window.console.log('match', match);\n\n        if (match) {\n            if (match[3] !== undefined) {\n                this.multilanguageName = true;\n                this.nameCount = 1;\n                this.name1 = match[3];\n                this.name1lang = match[2] || 'en';\n            }\n\n            if (match[6] !== undefined) {\n                if (match[4] == \"3\") {\n                    this.nameCount = 3;\n                    this.name3 = match[6];\n                    this.name3lang = match[5] || 'en';\n                } else {\n                    this.nameCount = 2;\n                    this.name2 = match[6];\n                    this.name2lang = match[5] || 'en';\n\n                    if (match[9] !== undefined) {\n                        this.nameCount = 3;\n                        this.name3 = match[9];\n                        this.name3lang = match[8] || 'en';\n                    }\n                }\n            }\n        }\n    }\n\n    #updateNameCount() {\n        if (this.name3) {\n            this.nameCount = 3;\n        } else if (this.name2) {\n            this.nameCount = 2;\n        } else {\n            this.nameCount = 1;\n        }\n    }\n\n    isGeneratedHTMLValidMultilanguageName(sectionOrActivityName) {\n        const test = new Util(sectionOrActivityName);\n        return test.multilanguageName;\n    }\n\n    convertToMultilanguageName() {\n        if (!this.multilanguageName) {\n            let [name1, name2, name3] = this.sectionOrActivityName.trim().split('|');\n\n            this.name3 = (name3 || '').trim();\n            this.name2 = (name2 || '').trim() || this.name3;\n            this.name1 = (name1 || '').trim() || this.name2 || 'Unnamed section';\n\n            this.nameCount = 1 + (this.name2 ? 1 : 0) + (this.name3 ? 1 : 0);\n\n            this.multilanguageName = true;\n        }\n        /* Parse the sectionOrActivityName from a standard format e.g., from Paepae kōrero | Keeping in touch */\n\n    }\n\n    /**\n     * Generate the HTML for the multilanguage name.\n     *\n     * @returns @string\n     */\n    generateHTML() {\n        this.#updateNameCount();\n\n        let html = Util.#CONTAINER_START_FRAGMENT;\n        let namefragement = '';\n        if (this.nameCount >= 1) {\n            namefragement = this.name1lang === 'en' ? Util.#NAME_FRAGMENT_EN : Util.#NAME_FRAGMENT;\n            html += namefragement.replace(/{level}/g, 1).replace(/{lang}/g, this.name1lang).replace(/{name}/g, this.name1);\n        }\n\n        if (this.nameCount >= 2 && this.name2) {\n            html += Util.#DIVIDER_FRAGMENT;\n            namefragement = this.name2lang === 'en' ? Util.#NAME_FRAGMENT_EN : Util.#NAME_FRAGMENT;\n            html += namefragement.replace(/{level}/g, 2).replace(/{lang}/g, this.name2lang).replace(/{name}/g, this.name2);\n        }\n\n        if (this.nameCount === 3) {\n            html += Util.#DIVIDER_FRAGMENT;\n            namefragement = this.name3lang === 'en' ? Util.#NAME_FRAGMENT_EN : Util.#NAME_FRAGMENT;\n            html += namefragement.replace(/{level}/g, 3).replace(/{lang}/g, this.name3lang).replace(/{name}/g, this.name3);\n        }\n\n        html += Util.#CONTAINER_END_FRAGMENT;\n\n        return html;\n    }\n\n    /**\n     * Generate the a plain text version of the multilanguage name.\n     *\n     * @returns @string\n     */\n    generatePlaintext() {\n        this.#updateNameCount();\n\n        let plaintext = '';\n\n        if (this.nameCount >= 1) {\n            plaintext = this.name1;\n        }\n\n        if (this.nameCount >= 2 && this.name2) {\n            plaintext += `${Util.#DIVIDER_PLAINTEXT_FRAGMENT}${this.name2}`;\n        }\n        if (this.nameCount === 3) {\n            plaintext += `${Util.#DIVIDER_PLAINTEXT_FRAGMENT}${this.name3}`;\n        }\n\n        return plaintext;\n    }\n}\n\nexport default Util;\n"],"names":["Util","DIVIDER_PLAINTEXT_FRAGMENT","RegExp","CONTAINER_START_REGEX_FRAGMENT","NAME_REGEX_FRAGMENT","DIVIDER_REGEX_FRAGMENT","CONTAINER_END_REGEX_FRAGMENT","sectionOrActivityName","multilanguageName","nameCount","name1","name1lang","name2","name2lang","name3","name3lang","constructor","sectionOrActivityNameOrName1","undefined","parseName","match","this","matchAll","NAME_REGEX","window","console","log","isGeneratedHTMLValidMultilanguageName","convertToMultilanguageName","trim","split","generateHTML","updateNameCount","html","CONTAINER_START_FRAGMENT","namefragement","NAME_FRAGMENT_EN","NAME_FRAGMENT","replace","DIVIDER_FRAGMENT","CONTAINER_END_FRAGMENT","generatePlaintext","plaintext"],"mappings":"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"}