{"version":3,"file":"Util.min.js","sources":["../src/Util.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module Util\n *\n * @module     local_multilanguagenames/Util\n * @copyright  2025 Andrew Rowatt <A.J.Rowatt@massey.ac.nz>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// https://regex101.com/r/cRgZFS\n// https://regex101.com/r/sIVMIq\n// https://regex101.com/r/bDAO3Z\n// https://regex101.com/r/Wsn3yl name fragment\n\n/* eslint-disable max-len */\nclass Util {\n    static #CONTAINER_START_REGEX_FRAGMENT = '<span class=\"mlnc\">';\n    static #CONTAINER_START_FRAGMENT = '<span class=\"mlnc\">';\n\n    static #NAME_REGEX_FRAGMENT = '<span class=\"n(\\\\d)\"(?: lang=\"(..)\" xml:lang=\"..\")?>(.*?)<\\\\/span>';\n    static #NAME_FRAGMENT = '<span class=\"n{level}\" lang=\"{lang}\" xml:lang=\"{lang}\">{name}</span>';\n    static #NAME_FRAGMENT_EN = '<span class=\"n{level}\">{name}</span>';\n\n    static #DIVIDER_PLAINTEXT_FRAGMENT = ' | ';\n    static #DIVIDER_REGEX_FRAGMENT = '<span> \\\\| <\\\\/span>';\n    static #DIVIDER_FRAGMENT = `<span>${Util.#DIVIDER_PLAINTEXT_FRAGMENT}</span>`;\n\n    static #CONTAINER_END_REGEX_FRAGMENT = '<\\\\/span>';\n    static #CONTAINER_END_FRAGMENT = '</span>';\n\n    static #NAME_REGEX = new RegExp(`${Util.#CONTAINER_START_REGEX_FRAGMENT}${Util.#NAME_REGEX_FRAGMENT}(?:${Util.#DIVIDER_REGEX_FRAGMENT}${Util.#NAME_REGEX_FRAGMENT}(?:${Util.#DIVIDER_REGEX_FRAGMENT}${Util.#NAME_REGEX_FRAGMENT})?)?${Util.#CONTAINER_END_REGEX_FRAGMENT}`, 'g');\n\n    // Default state\n    sectionOrActivityName = '';\n    multilanguageName = false;\n    nameCount = 0;\n    name1 = '';\n    name1lang = 'en';\n    name2 = '';\n    name2lang = 'en';\n    name3 = '';\n    name3lang = 'en';\n\n    constructor(sectionOrActivityNameOrName1, name1lang, name2 = '', name2lang = '', name3 = '', name3lang = '') {\n        if (name1lang === undefined) {\n            this.sectionOrActivityName = sectionOrActivityNameOrName1;\n            this.#parseName();\n        } else {\n            this.name1 = sectionOrActivityNameOrName1;\n            this.name1lang = name1lang;\n            this.nameCount = 1;\n\n            this.name2 = name2;\n            this.name2lang = name2lang;\n            if (name2 && name2lang) {\n                this.nameCount = 2;\n            }\n\n            this.name3 = name3;\n            this.name3lang = name3lang;\n            if (name3 && name3lang) {\n                this.nameCount = 3;\n            }\n\n        }\n    }\n\n    #parseName() {\n        let [match] = [...this.sectionOrActivityName.matchAll(Util.#NAME_REGEX, 'g')];\n\n        if (match) {\n            if (match[3] !== undefined) {\n                this.multilanguageName = true;\n                this.nameCount = 1;\n                this.name1 = match[3];\n                this.name1lang = match[2] || 'en';\n            }\n\n            if (match[6] !== undefined) {\n                if (match[4] == \"3\") {\n                    this.nameCount = 3;\n                    this.name3 = match[6];\n                    this.name3lang = match[5] || 'en';\n                } else {\n                    this.nameCount = 2;\n                    this.name2 = match[6];\n                    this.name2lang = match[5] || 'en';\n\n                    if (match[9] !== undefined) {\n                        this.nameCount = 3;\n                        this.name3 = match[9];\n                        this.name3lang = match[8] || 'en';\n                    }\n                }\n            }\n        }\n    }\n\n    #updateNameCount() {\n        if (this.name3) {\n            this.nameCount = 3;\n        } else if (this.name2) {\n            this.nameCount = 2;\n        } else {\n            this.nameCount = 1;\n        }\n    }\n\n    isGeneratedHTMLValidMultilanguageName(sectionOrActivityName) {\n        const test = new Util(sectionOrActivityName);\n        return test.multilanguageName;\n    }\n\n    convertToMultilanguageName() {\n        if (!this.multilanguageName) {\n            let [name1, name2, name3] = this.sectionOrActivityName.trim().split('|');\n\n            this.name3 = (name3 || '').trim();\n            this.name2 = (name2 || '').trim() || this.name3;\n            this.name1 = (name1 || '').trim() || this.name2 || 'Unnamed section';\n\n            this.nameCount = 1 + (this.name2 ? 1 : 0) + (this.name3 ? 1 : 0);\n\n            this.multilanguageName = true;\n        }\n        /* Parse the sectionOrActivityName from a standard format e.g., from Paepae kōrero | Keeping in touch */\n\n    }\n\n    /**\n     * Generate the HTML for the multilanguage name.\n     *\n     * @returns @string\n     */\n    generateHTML() {\n        this.#updateNameCount();\n\n        let html = Util.#CONTAINER_START_FRAGMENT;\n        let namefragement = '';\n        if (this.nameCount >= 1) {\n            namefragement = this.name1lang === 'en' ? Util.#NAME_FRAGMENT_EN : Util.#NAME_FRAGMENT;\n            html += namefragement.replace(/{level}/g, 1).replace(/{lang}/g, this.name1lang).replace(/{name}/g, this.name1);\n        }\n\n        if (this.nameCount >= 2 && this.name2) {\n            html += Util.#DIVIDER_FRAGMENT;\n            namefragement = this.name2lang === 'en' ? Util.#NAME_FRAGMENT_EN : Util.#NAME_FRAGMENT;\n            html += namefragement.replace(/{level}/g, 2).replace(/{lang}/g, this.name2lang).replace(/{name}/g, this.name2);\n        }\n\n        if (this.nameCount === 3) {\n            html += Util.#DIVIDER_FRAGMENT;\n            namefragement = this.name3lang === 'en' ? Util.#NAME_FRAGMENT_EN : Util.#NAME_FRAGMENT;\n            html += namefragement.replace(/{level}/g, 3).replace(/{lang}/g, this.name3lang).replace(/{name}/g, this.name3);\n        }\n\n        html += Util.#CONTAINER_END_FRAGMENT;\n\n        return html;\n    }\n\n    /**\n     * Generate the a plain text version of the multilanguage name.\n     *\n     * @returns @string\n     */\n    generatePlaintext() {\n        this.#updateNameCount();\n\n        let plaintext = '';\n\n        if (this.nameCount >= 1) {\n            plaintext = this.name1;\n        }\n\n        if (this.nameCount >= 2 && this.name2) {\n            plaintext += `${Util.#DIVIDER_PLAINTEXT_FRAGMENT}${this.name2}`;\n        }\n        if (this.nameCount === 3) {\n            plaintext += `${Util.#DIVIDER_PLAINTEXT_FRAGMENT}${this.name3}`;\n        }\n\n        return plaintext;\n    }\n}\n\nexport default Util;\n"],"names":["Util","constructor","sectionOrActivityNameOrName1","name1lang","name2","name2lang","name3","name3lang","undefined","sectionOrActivityName","name1","nameCount","isGeneratedHTMLValidMultilanguageName","multilanguageName","convertToMultilanguageName","this","trim","split","generateHTML","html","namefragement","replace","generatePlaintext","plaintext","match","matchAll","RegExp"],"mappings":";;;;;;;;MA6BMA,KA4BFC,YAAYC,6BAA8BC,eAAWC,6DAAQ,GAAIC,iEAAY,GAAIC,6DAAQ,GAAIC,iEAAY,gJAVjF,8CACJ,oCACR,gCACJ,qCACI,mCACJ,qCACI,mCACJ,qCACI,WAGUC,IAAdL,gBACKM,sBAAwBP,mGAGxBQ,MAAQR,kCACRC,UAAYA,eACZQ,UAAY,OAEZP,MAAQA,WACRC,UAAYA,UACbD,OAASC,iBACJM,UAAY,QAGhBL,MAAQA,WACRC,UAAYA,UACbD,OAASC,iBACJI,UAAY,IA+C7BC,sCAAsCH,8BACrB,IAAIT,KAAKS,uBACVI,kBAGhBC,iCACSC,KAAKF,kBAAmB,KACpBH,MAAON,MAAOE,OAASS,KAAKN,sBAAsBO,OAAOC,MAAM,UAE/DX,OAASA,OAAS,IAAIU,YACtBZ,OAASA,OAAS,IAAIY,QAAUD,KAAKT,WACrCI,OAASA,OAAS,IAAIM,QAAUD,KAAKX,OAAS,uBAE9CO,UAAY,GAAKI,KAAKX,MAAQ,EAAI,IAAMW,KAAKT,MAAQ,EAAI,QAEzDO,mBAAoB,GAWjCK,8FAGQC,qCAAOnB,KA1HbA,gCA2HMoB,cAAgB,UAChBL,KAAKJ,WAAa,IAClBS,cAAmC,OAAnBL,KAAKZ,0CAAqBH,KA7HhDA,wDA6HyEA,KA7HzEA,qBA8HMmB,MAAQC,cAAcC,QAAQ,WAAY,GAAGA,QAAQ,UAAWN,KAAKZ,WAAWkB,QAAQ,UAAWN,KAAKL,QAGxGK,KAAKJ,WAAa,GAAKI,KAAKX,QAC5Be,sCAAQnB,KAlIdA,wBAmIMoB,cAAmC,OAAnBL,KAAKV,0CAAqBL,KAnIhDA,wDAmIyEA,KAnIzEA,qBAoIMmB,MAAQC,cAAcC,QAAQ,WAAY,GAAGA,QAAQ,UAAWN,KAAKV,WAAWgB,QAAQ,UAAWN,KAAKX,QAGrF,IAAnBW,KAAKJ,YACLQ,sCAAQnB,KAxIdA,wBAyIMoB,cAAmC,OAAnBL,KAAKR,0CAAqBP,KAzIhDA,wDAyIyEA,KAzIzEA,qBA0IMmB,MAAQC,cAAcC,QAAQ,WAAY,GAAGA,QAAQ,UAAWN,KAAKR,WAAWc,QAAQ,UAAWN,KAAKT,QAG5Ga,sCAAQnB,KA7IVA,8BA+ISmB,KAQXG,mGAGQC,UAAY,UAEZR,KAAKJ,WAAa,IAClBY,UAAYR,KAAKL,OAGjBK,KAAKJ,WAAa,GAAKI,KAAKX,QAC5BmB,qDAAgBvB,KAjKtBA,0CAiKyDe,KAAKX,QAErC,IAAnBW,KAAKJ,YACLY,qDAAgBvB,KApKtBA,0CAoKyDe,KAAKT,QAGrDiB,sCAlHFC,OAAS,IAAIT,KAAKN,sBAAsBgB,yCAASzB,KArDxDA,kBAqD0E,MAEpEwB,aACiBhB,IAAbgB,MAAM,UACDX,mBAAoB,OACpBF,UAAY,OACZD,MAAQc,MAAM,QACdrB,UAAYqB,MAAM,IAAM,WAGhBhB,IAAbgB,MAAM,KACU,KAAZA,MAAM,SACDb,UAAY,OACZL,MAAQkB,MAAM,QACdjB,UAAYiB,MAAM,IAAM,YAExBb,UAAY,OACZP,MAAQoB,MAAM,QACdnB,UAAYmB,MAAM,IAAM,UAEZhB,IAAbgB,MAAM,UACDb,UAAY,OACZL,MAAQkB,MAAM,QACdjB,UAAYiB,MAAM,IAAM,sCAQzCT,KAAKT,WACAK,UAAY,EACVI,KAAKX,WACPO,UAAY,OAEZA,UAAY,mDAvFU,+DAEL,wGACN,6GACG,uFAEU,kDACJ,6GACGX,KAVlCA,yFAa+B,0CAEZ,IAAI0B,iDAAU1B,KAfjCA,wBACuC,gEAciCA,KAfxEA,yEAeuGA,KAfvGA,sEAesIA,KAftIA,yEAeqKA,KAfrKA,sEAeoMA,KAfpMA,0EAeoOA,KAfpOA,wBAYqC,eAGqO,eA4JjQA"}