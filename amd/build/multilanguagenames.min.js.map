{"version":3,"file":"multilanguagenames.min.js","sources":["../src/multilanguagenames.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/* eslint-disable no-console */\n\n/**\n * TODO describe module Multi-language section and activity names\n *\n * @module     local_multilanguagenames/multilanguagenames\n * @copyright  2025 Andrew Rowatt <A.J.Rowatt@massey.ac.nz>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Util from 'local_multilanguagenames/Util';\nimport {exception as displayException} from 'core/notification';\nimport Templates from 'core/templates';\n\nexport const init = () => {\n    $(function() {\n        console.log(\"Multi-language section and activity names (local_multilanguagenames) module initialized\");\n        // Add your module initialization code here\n        const idName = $('#id_name').val();\n\n        var util = new Util(idName);\n        if (util.multilanguageName) {\n            $('#fitem_id_name').addClass('hidden');\n        }\n\n        let context = {\n            name: idName,\n            multilanguageName: util.multilanguageName,\n            name1: util.name1,\n            name2: util.name2,\n            name3: util.name3,\n        };\n\n        context[`name1lang${util.name1lang}`] = true;\n        context[`name2lang${util.name2lang}`] = true;\n        context[`name3lang${util.name3lang}`] = true;\n\n        // This will call the function to load and render our template.\n        Templates.renderForPromise('local_multilanguagenames/edit_form', context)\n        // eslint-disable-next-line promise/always-return\n        .then(({html}) => {\n            $(html).insertAfter('#fitem_id_name');\n\n            $('#usemultilanguagename').on('change', function() {\n                $('#fitem_id_name').toggleClass('hidden');\n                $('#namemultilang_group').toggleClass('hidden');\n            });\n        })\n        .catch((error) => displayException(error));\n    });\n};\n"],"names":["_interopRequireDefault","e","__esModule","default","_jquery","_Util","_templates","_exports","init","$","console","log","idName","val","util","Util","multilanguageName","addClass","context","name","name1","name2","name3","name1lang","name2lang","name3lang","Templates","renderForPromise","then","_ref","html","insertAfter","on","toggleClass","catch","error","displayException"],"mappings":"0MA4BuC,SAAAA,uBAAAC,UAAAA,GAAAA,EAAAC,WAAAD,GAAAE,QAAAF;;;;;;;kFAHvCG,QAAAJ,uBAAAI,SACAC,MAAAL,uBAAAK,OAEAC,WAAAN,uBAAAM,YAsCEC,SAAAC,KApCkBA,MAChB,EAAAC,kBAAE,WACEC,QAAQC,IAAI,2FAEZ,MAAMC,QAAS,EAAAH,iBAAE,YAAYI,MAE7B,IAAIC,KAAO,IAAIC,cAAKH,QAChBE,KAAKE,oBACL,EAAAP,iBAAE,kBAAkBQ,SAAS,UAGjC,IAAIC,QAAU,CACVC,KAAMP,OACNI,kBAAmBF,KAAKE,kBACxBI,MAAON,KAAKM,MACZC,MAAOP,KAAKO,MACZC,MAAOR,KAAKQ,OAGhBJ,QAAQ,YAAYJ,KAAKS,cAAe,EACxCL,QAAQ,YAAYJ,KAAKU,cAAe,EACxCN,QAAQ,YAAYJ,KAAKW,cAAe,EAGxCC,mBAAUC,iBAAiB,qCAAsCT,SAEhEU,MAAKC,OAAY,IAAXC,KAACA,MAAKD,MACT,EAAApB,iBAAEqB,MAAMC,YAAY,mBAEpB,EAAAtB,iBAAE,yBAAyBuB,GAAG,UAAU,YACpC,EAAAvB,iBAAE,kBAAkBwB,YAAY,WAChC,EAAAxB,iBAAE,wBAAwBwB,YAAY,gBAG7CC,OAAOC,QAAU,EAAAC,yBAAiBD"}